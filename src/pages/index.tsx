import Head from 'next/head'
import Login from '@/components/Login'
import Header from '@/components/HomePage/Header'
import { FormEvent, useEffect, useState } from 'react'
import { TodoModel } from '@/models/todo'
import { v4 as uuidv4 } from 'uuid'
import { addToFirebase, fetchTodos } from '@/utils'
import { User } from 'firebase/auth'
import TodoForm from '@/components/HomePage/TodoForm'
import Loading from '@/components/Loading'
import Todos from '@/components/HomePage/Todos'

export default function Home({ user, authChecking }: { user: User, authChecking: boolean }) {
  const [todo, setTodo] = useState<string>('')
  const [todos, setTodos] = useState<TodoModel[]>([])
  const [adding, setAdding] = useState<boolean>(false)
  const [loading, setLoading] = useState(false)

  const addTodo = async (e: FormEvent) => {
    if (!user.email) {
      return
    }
    e.preventDefault()
    const newTodo: TodoModel = {
      id: uuidv4(),
      todo,
      isDone: false
    }
    setAdding(true)
    await addToFirebase(user.email, [newTodo, ...todos]);
    setAdding(false)
    setTodos([newTodo, ...todos])
    setTodo('')
  }

  const onDelete = async (id: string) => {
    if (!user.email) {
      return
    }
    const newTodos = todos.filter(todo => todo.id !== id)

    setTodos(newTodos)
    await addToFirebase(user.email, newTodos);
  }

  const checkTodo = async (todo: TodoModel) => {
    if (!user.email) {
      return
    }
    const newTodos = todos.map((t) => {
      if (t.id === todo.id) {
        t.isDone = !t.isDone
      }
      return t
    })
    setTodos(newTodos)
    await addToFirebase(user.email, newTodos);
  }

  useEffect(() => {

    setLoading(true)
    if (user && user.email) {
      fetchTodos(user.email).then(
        (todos) => {
          if (todos) {
            setTodos(todos)
          }
        }
      ).finally(() => {
        setLoading(false)
      })
    }
  }, [user])


  return (
    <>
      <Head>
        <title>Todo App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {
        !user ? <Login authChecking={authChecking} /> : (
          <main className='max-w-lg mx-auto px-4'>
            <Header user={user} />
            <TodoForm
              addTodo={addTodo}
              adding={adding}
              setTodo={setTodo}
              todo={todo}
            />
            <section className='w-full mt-8'>
              {
                loading ? <Loading /> :
                  <Todos todos={todos} checkTodo={checkTodo} onDelete={onDelete} />
              }
            </section>
          </main>
        )
      }
    </>
  )
}
